package me.zhangls.rilintech.adapter;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;
import me.zhangls.rilintech.R;
import me.zhangls.rilintech.model.Model_four;
import me.zhangls.rilintech.model.Model_one;
import me.zhangls.rilintech.model.Model_three;
import me.zhangls.rilintech.model.Model_two;
import me.zhangls.rilintech.utils.L;

/**
 * 编辑或者新建时用到的ListView的加载器（item子控件为RadioGroup）
 * Created by YANG on 15/11/12.
 */
public class TableInfoRadioGroupAdapter extends BaseAdapter {

    private LayoutInflater mInflater;
    private Model_one model_one;
    //包含RadioGroup的item布局
    private int ITEM_LAYOUT_RADIOGROUP = -1;
    //评定问题的集合
    private static List<Model_three> list_model_three;
    //second_title
    private List<String> list_second_title;
    //每个问题的选项集合
    private List<Model_four> list_options;
    //选项的个数
    private int optionCount;

    //评定问题值的集合
    private List<String> list_values;
    //评定问题选项的值集合
    private List<Model_four> list_options_values;

    //TextView first_title;
    private TextView second_title;
    private TextView question;
    //拿到的所有的List
    private List<Model_one> mLists;
    //区分编辑和添加
    private boolean flag = false;
    //选项的初始分值
    private String start_score;

    public TableInfoRadioGroupAdapter(Context context, Model_one model_one) {

        this.model_one = model_one;
        mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);

        getAllQuestions();
        //清空list_model_three中的答案分值
        for(int i=0;i<list_model_three.size();i++){
            list_model_three.get(i).setValue("-1");
        }
        getAllOptions();


    }

    public TableInfoRadioGroupAdapter(Context context, List<Model_one> lists, String spinner_value) {
        flag = true;
        this.mLists = lists;
        this.model_one = lists.get(0);
        mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);

        getAllQuestions(spinner_value);
        getAllOptions();
        getQuestionsAndValues(spinner_value);
        getOptionsStartScore();
    }

    /**
     * 通过下拉列表选中的某项，获得所有的问题集合
     *
     * @param spinner_value
     */
    private void getAllQuestions(String spinner_value) {

        list_second_title = new ArrayList<>();
        list_model_three = new ArrayList<>();

        for (int position = 0; position < mLists.size(); position++) {
            if (spinner_value.equals(mLists.get(position).getEvaluation_time_note())) {

                Model_one list_one = mLists.get(position);
                for (int i = 0; i < list_one.getHeader_questions().size(); i++) {
                    Model_two list_two = list_one.getHeader_questions().get(i);
                    for (int j = 0; j < list_two.getQuestions().size(); j++) {
                        if ("总分".equals(list_two.getQuestions().get(j).getQuestion())) {
                        } else if ("分级".equals(list_two.getQuestions().get(j).getQuestion())) {
                        } else {
                            list_second_title.add(list_two.getHeader());
                            //评定问题的集合
                            list_model_three.add(list_two.getQuestions().get(j));
                        }
                    }
                }
            }
        }
    }

    /**
     * 通过下拉列表选中的某项，获取第一个选项的初始分数
     */
    private void getOptionsStartScore() {
//        for (Model_four model_four : list_options_values) {
//            if (model_four.getValue().substring(0, 1).contains("0")) {
//                start_score = "0.0";
//                break;
//            } else {
//                start_score = "1.0";
//            }
//        }
    }


    /**
     * 通过下拉列表选中的某项，获取问题和值的集合
     *
     * @param spinner_value
     */
    private void getQuestionsAndValues(String spinner_value) {

        list_values = new ArrayList<>();
        list_options_values = new ArrayList<>();

        for (int position = 0; position < mLists.size(); position++) {
            if (spinner_value.equals(mLists.get(position).getEvaluation_time_note())) {

                Model_one list_one = mLists.get(position);
                for (int i = 0; i < list_one.getHeader_questions().size(); i++) {
                    Model_two list_two = list_one.getHeader_questions().get(i);
                    for (int j = 0; j < list_two.getQuestions().size(); j++) {
                        Model_three list_three = list_two.getQuestions().get(j);
                        if ("总分".equals(list_three.getQuestion())) {
                        } else if ("分级".equals(list_three.getQuestion())) {
                        } else {
                            //评定问题的值的集合
                            list_values.add(list_three.getValue());
                            for (int k = 0; k < list_three.getOptions().size(); k++) {
                                list_options_values.add(list_three.getOptions().get(k));
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * 获得所有问题集合（model_three）
     */
    private void getAllQuestions() {

        list_second_title = new ArrayList<>();
        list_model_three = new ArrayList<>();

        if (model_one.getHeader_questions().size() > 0) {
            for (int i = 0; i < model_one.getHeader_questions().size(); i++) {
                for (int j = 0; j < model_one.getHeader_questions().get(i).getQuestions().size(); j++) {
                    if ("总分".equals(model_one.getHeader_questions().get(i).getQuestions().get(j).getQuestion())) {
                    } else if ("分级".equals(model_one.getHeader_questions().get(i).getQuestions().get(j).getQuestion())) {
                    } else {
                        list_second_title.add(model_one.getHeader_questions().get(i).getHeader());
                        list_model_three.add(model_one.getHeader_questions().get(i).getQuestions().get(j));
                    }
                }
            }
        }
    }

    /**
     * 获得所有选项集合（Model_four）
     */
    private void getAllOptions() {
        list_options = new ArrayList<>();
        for (int i = 0; i < list_model_three.size(); i++) {
            optionCount = list_model_three.get(i).getOptions().size();
            for (int j = 0; j < optionCount; j++) {
                list_options.add(list_model_three.get(i).getOptions().get(j));
            }
        }
    }


    @Override
    public int getCount() {

        return list_model_three.size();
    }

    @Override
    public Object getItem(int position) {
        return list_model_three.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(final int position, View convertView, ViewGroup parent) {

        optionCount = list_model_three.get(position).getOptions().size();
        switch (optionCount) {
            case 2:
                ITEM_LAYOUT_RADIOGROUP=R.layout.textview_textview_radiobutton_2;

                break;
            case 3:
                ITEM_LAYOUT_RADIOGROUP=R.layout.textview_textview_radiobutton_3;
                break;
            case 4:
                ITEM_LAYOUT_RADIOGROUP=R.layout.textview_textview_radiobutton_4;
                break;
            case 5:
                ITEM_LAYOUT_RADIOGROUP=R.layout.textview_textview_radiobutton_5;
                break;
            case 6:
                ITEM_LAYOUT_RADIOGROUP=R.layout.textview_textview_radiobutton_6;
                break;
            case 7:
                ITEM_LAYOUT_RADIOGROUP=R.layout.textview_textview_radiobutton_7;
                break;
            case 9:
                ITEM_LAYOUT_RADIOGROUP=R.layout.textview_textview_radiobutton_9;
                break;
            case 11:
                ITEM_LAYOUT_RADIOGROUP=R.layout.textview_textview_radiobutton_11;
                break;
        }
        convertView = mInflater.inflate(ITEM_LAYOUT_RADIOGROUP, null);
        initView(convertView, position);
        initData(optionCount, position, convertView);
        return convertView;
    }

    /**
     * 加载视图view
     *
     * @param convertView
     * @param
     */
    private void initView(View convertView, int position) {
        second_title = (TextView) convertView.findViewById(R.id.item_head_title);
        question = (TextView) convertView.findViewById(R.id.item_sub_title);
        Model_three modeThree = list_model_three.get(position);
        modeThree.setRadioGroup((RadioGroup) convertView.findViewById(R.id.item_title_rg));
    }

    private void initData(int optionCount, int position, View convertView) {

        switch (optionCount) {
            case 2:
                //设置radioGroup的值
                setRadioGroupData(position, flag, convertView);

                break;
            case 3:
                //设置radioGroup的值
                setRadioGroupData(position, flag, convertView);
                break;
            case 4:
                //设置radioGroup的值
                setRadioGroupData(position, flag, convertView);
                break;
            case 5:
                //设置radioGroup的值
                setRadioGroupData(position, flag, convertView);
                break;
            case 6:
                //设置radioGroup的值
                setRadioGroupData(position, flag, convertView);
                break;
            case 7:
                //设置radioGroup的值
                setRadioGroupData(position, flag, convertView);
                break;
            case 9:
                //设置radioGroup的值
                setRadioGroupData(position, flag, convertView);
                break;
            case 11:
                //设置radioGroup的值
                setRadioGroupData(position, flag, convertView);
                break;
        }
    }

    /**
     * 设置radioGroup的数据
     *
     * @param position
     */
    private void setRadioGroupData(int position, boolean flag, View convertView) {

        final Model_three model_three = list_model_three.get(position);
        if (flag) {
            radioGroupOperate(position, convertView);
//            for (int j = 0; j < optionCount; j++) {
//                RadioButton rb = (RadioButton) model_three.getRadioGroup().getChildAt(j);
//                L.d("oo","rb.getTag()="+rb.getTag());
//                L.d("oo","model_three.getValue()="+model_three.getValue());
//                if(rb.getTag().equals(model_three.getValue())){
//                    rb.setChecked(true);
//                }
//            }
//            if ("0".equals(start_score.substring(0, 1))) {
//                String value = list_model_three.get(position).getValue();
//                int v = Integer.parseInt(value.substring(0, 1));
//                RadioButton rb = (RadioButton) model_three.getRadioGroup().getChildAt(v);
//                rb.setChecked(true);
//
//            } else if ("1".equals(start_score.substring(0, 1))) {
//                //编辑时，选中的radiobutton
//                String value = list_model_three.get(position).getValue();
//                int v = Integer.parseInt(value.substring(0, 1)) - 1;
//                RadioButton rb = (RadioButton) model_three.getRadioGroup().getChildAt(v);
//                rb.setChecked(true);
//            }

            flag = false;
        } else {
            //添加
            L.d("OO", "1111111");
            radioGroupOperate(position, convertView);
        }
    }

    /**
     * radioGroup的操作
     *
     * @param position
     */
    private void radioGroupOperate(final int position, final View convertView) {
        L.d("oo", "edit");
        final Model_three model_three = list_model_three.get(position);
        //L.d("oo", model_three.getClickPosition() + "");

        if (list_second_title.get(position).equals("null")) {
            second_title.setVisibility(View.GONE);
        } else {
            second_title.setText(list_second_title.get(position));
        }
        question.setText(model_three.getQuestion());

        for (int j = 0; j < optionCount; j++) {
            final RadioButton rb = (RadioButton) model_three.getRadioGroup().getChildAt(j);
            rb.setText(model_three.getOptions().get(j).getContent());
            //rb.setTag(j);
            rb.setTag(model_three.getOptions().get(j).getValue());

            if (model_three.getValue().substring(0,1).equals(rb.getTag().toString().substring(0, 1))) {
                rb.setChecked(true);
            } else {
                rb.setChecked(false);
            }
            rb.setOnClickListener(new RadioButton.OnClickListener() {
                @Override
                public void onClick(View v) {
                    model_three.setValue(rb.getTag()+"");
                }
            });
        }
    }

    /**
     * radioGroup添加
     * @param position
     */
    private void radioGroupAdd(final int position, final View convertView) {
        L.d("oo", "add");

        final Model_three model_three = list_model_three.get(position);
        L.d("oo", model_three.getClickPosition() + "");

        if (list_second_title.get(position).equals("null")) {
            second_title.setVisibility(View.GONE);
        } else {
            second_title.setText(list_second_title.get(position));
        }
        question.setText(list_model_three.get(position).getQuestion());

        for (int j = 0; j < optionCount; j++) {
            final RadioButton rb = (RadioButton) model_three.getRadioGroup().getChildAt(j);
            rb.setText(model_three.getOptions().get(j).getContent());
            //rb.setTag(j);
            rb.setTag(model_three.getOptions().get(j).getValue());
                if (model_three.getValue().equals(rb.getTag())) {
                    rb.setChecked(true);
                } else {
                    rb.setChecked(false);
                }
            rb.setOnClickListener(new RadioButton.OnClickListener() {
                @Override
                public void onClick(View v) {
                    //model_three.setClickPosition((int)rb.getTag());
                    model_three.setValue(rb.getTag() + "");
                }
            });
        }
    }

    public static  List<Model_three> getlist_modle_three(){
        return list_model_three;
    }

}
