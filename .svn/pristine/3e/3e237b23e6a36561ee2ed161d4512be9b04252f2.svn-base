package me.zhangls.rilintech.activity;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.AdapterView;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;

import me.zhangls.rilintech.R;
import me.zhangls.rilintech.adapter.SpinnerBaseAdapter;
import me.zhangls.rilintech.adapter.TableIndexRadioGroupAdapter;
import me.zhangls.rilintech.constants.NetUrlAddress;
import me.zhangls.rilintech.model.Get_URL;
import me.zhangls.rilintech.model.Model_one;
import me.zhangls.rilintech.model.TableFragmentListViewDate;
import me.zhangls.rilintech.utils.L;

/**
 * Created by zsn on 15/11/11.
 */
public class TableChildIndexActivity extends TableParentIndexActivity {

    //子控件位置
    private int position;
    //父控件位置
    private int main_position;
    //标题名字
    private String indexTextName;
    private Handler handler;
    //当前登录的用户ID
    private int user_auth_id;
    //患者ID
    private int patient_info_id;
    //menu_lib_id
    private String menu_lib_id;
    //返回的json-->字符串
    private String value = null;
    //返回的model
    private ArrayList<Model_one> list_infos = null;
    //另起线程拿数据
    private MyThread myThread;
    //异步任务
    private Task task;

    //评定说明集合
    private ArrayList<String>lists_note=new ArrayList<>();
    //评定人集合
    private ArrayList<String>lists_person=new ArrayList<>();
    //评定时间集合
    private ArrayList<String>lists_time=new ArrayList<>();
    //spinner适配器
    private SpinnerBaseAdapter adapter_spinner;
    //选中的spinner值
    private String instructions_value;
    //警告对话框
    private AlertDialog dialog;
    //返回的已存在记录量表集
    private ArrayList<String> list_instructions_cloud = new ArrayList<>();


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        getSharedPreferencesData();

        task=new Task();
        task.execute();


    }

    /**
     * 获取当前登录用户和当前患者的ID
     */
    private void getSharedPreferencesData() {
        SharedPreferences sharedPreferences = getSharedPreferences("patientinfo", Activity.MODE_PRIVATE);
        patient_info_id = sharedPreferences.getInt("id", -1);

        SharedPreferences preferences = getSharedPreferences("user", MODE_PRIVATE);
        user_auth_id = preferences.getInt("use_id", 2);

        menu_lib_id = getIntent().getStringExtra("menu_lib_id");
        position = getIntent().getIntExtra("position", 0);
        main_position = getIntent().getIntExtra("main_position", 0);

    }

    /**
     * 获取返回数据
     */
    class MyThread extends Thread {

        public void run() {
            setListView();
        }
    }

    /**
     * 设置标题
     */
    private void setIndexTextName() {
        TableFragmentListViewDate tableFragmentListViewDate=new TableFragmentListViewDate(this);
        L.d("main_position=" + main_position + "position=" + position);
        indexTextName =tableFragmentListViewDate.getList_more_text().get(main_position).get(position);
        title.setText(indexTextName);
    }

    private void initListener() {

        add.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                Intent intent = new Intent(TableChildIndexActivity.this, TableChildInfoActivity.class);
                Bundle bundle = new Bundle();
                bundle.putStringArrayList("lists_note", lists_note);
                bundle.putParcelableArrayList("list_infos", list_infos);
                intent.putExtras(bundle);
                startActivity(intent);
            }
        });

        back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        //当不存在数据时，listview等其他控件不可点击
        if(lists_note.get(0).equals("")||lists_note.get(0).equals("null")){
            listView.setClickable(false);
            instructions.setClickable(false);
            maker.setEnabled(false);
            date.setEnabled(false);

        }else{
            listView.setClickable(true);
            instructions.setClickable(true);
            maker.setEnabled(false);
            date.setEnabled(false);

            listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                @Override
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    AlertDialog.Builder builder = new AlertDialog.Builder(TableChildIndexActivity.this);
                    View view1 = getLayoutInflater().inflate(R.layout.dialog_layout, null);

                    TextView delete = (TextView) view1.findViewById(R.id.delete);
                    TextView add = (TextView) view1.findViewById(R.id.add);
                    TextView edit = (TextView) view1.findViewById(R.id.edit);

                    dialog = builder.show();
                    dialog.getWindow().setContentView(view1);

                    //编辑
                    edit.setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            dialog.dismiss();
                            Intent intent = new Intent(TableChildIndexActivity.this, TableChildInfoActivity.class);
                            Bundle bundle = new Bundle();
                            TableChildInfoActivity.isAdd = false;
                            bundle.putStringArrayList("lists_note", lists_note);
                            bundle.putParcelableArrayList("list_infos", list_infos);
                            bundle.putString("instructions_value", instructions_value);
                            bundle.putString("date", date.getText().toString());
                            bundle.putString("maker", maker.getText().toString());
                            intent.putExtras(bundle);
                            startActivity(intent);
                        }
                    });
                    //添加
                    add.setOnClickListener(new View.OnClickListener(){

                        @Override
                        public void onClick(View v) {
                            dialog.dismiss();
                            Intent intent = new Intent(TableChildIndexActivity.this, TableChildInfoActivity.class);
                            Bundle bundle = new Bundle();
                            bundle.putStringArrayList("lists_note", lists_note);
                            bundle.putParcelableArrayList("list_infos", list_infos);
                            intent.putExtras(bundle);
                            startActivity(intent);
                        }
                    });
                    //删除
                    delete.setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            dialog.dismiss();
                            list_infos.clear();
                            listView.setAdapter(new TableIndexRadioGroupAdapter(TableChildIndexActivity.this,
                                    list_infos, instructions_value));
                            date.setText("");
                            maker.setText("");
                            lists_note.clear();
                        }
                    });
                }
            });
        }
    }

    /**
     * 从网络端请求数据
     * @return
     */
    @Override
    public List<Model_one> initData() {

        String param = "patient_info_id=" + patient_info_id
                + "&menu_lib_id=" + menu_lib_id
                + "&user_auth_id=" + user_auth_id
                + "&token=" + NetUrlAddress.token;

        L.d("patient_info_id=" + patient_info_id + "menu_lib_id=" + menu_lib_id + "user_auth_id=" + user_auth_id);

        try {

            value = Get_URL.getData(NetUrlAddress.GET_TABLE_DATA_URL, param);
            //value = Get_URL.executeHttpPost();
            L.d("yy", "all_value====" + value);
            list_infos = Get_URL.setupViews(value);
            L.d("yy", "one==" + list_infos.size());

            for (int i = 0; i < list_infos.size(); i++) {

                String person = list_infos.get(i).getEvaluation_person();
                String time = list_infos.get(i).getEvaluation_time();
                String note = list_infos.get(i).getEvaluation_time_note();

                lists_note.add(note);
                lists_person.add(person);
                lists_time.add(time);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return  list_infos;

    }
    /**
     * ListView赋值
     */
    private void setListView() {
        if (list_infos != null) {
            listView.setAdapter(new TableIndexRadioGroupAdapter(this, list_infos,instructions_value));
        } else {
            L.d("yy", "解析失败，返回数据==" + value);
        }
    }

    private class Task extends AsyncTask<String,String,Integer>{

        @Override
        protected Integer doInBackground(String... params) {
            list_infos= (ArrayList<Model_one>) initData();
            return list_infos.size();
        }

        @Override
        protected void onPostExecute(Integer s) {
            super.onPostExecute(s);
            if(0!=s){
                //获取标题名称
                setIndexTextName();
                //显示评定说明、日期和评定人
                setNoteAndTimeAndPerson();
                //显示listview
                setListView();
                //监听器
                initListener();
            }
        }
    }

    /**
     * 设置评定说明、日期和评定人
     */
    private void setNoteAndTimeAndPerson() {
        if( lists_note.size()>0){
            instructions_value = lists_note.get(0);
            String time_value = lists_time.get(0);
            String person_value = lists_person.get(0);

            date.setText(time_value);
            maker.setText(person_value);

            adapter_spinner = new SpinnerBaseAdapter(TableChildIndexActivity.this, android.R.layout.simple_spinner_item, instructions, lists_note);
            adapter_spinner.setDropDownViewResource(R.layout.item_spinner_layout);
            instructions.setOnItemSelectedListener(new MyOnItemSelectedListener());
            instructions.setAdapter(adapter_spinner);
        }
    }
    /**
     * 监听 Spinner点选
     */
    public class MyOnItemSelectedListener implements AdapterView.OnItemSelectedListener {

        @Override
        public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {

            if(lists_note.size()>0){
                instructions_value = lists_note.get(position);
                date.setText(lists_time.get(position));
                maker.setText(lists_person.get(position));
            }
            setListView();
        }

        @Override
        public void onNothingSelected(AdapterView<?> parent) {

        }
    }
}
